#!/usr/bin/env perl -T

use strict;
use warnings;
use English qw(-no_match_vars);
use Carp;
use CGI qw(:standard);
use URI::Escape qw(uri_unescape uri_escape);

main();

exit 0;

sub _error {
  my ($message, $path) = @_;
  carp "$message for $path";
  # Path might contain anything, do not write it
  # back to the page.
  print "Content-type: text/html\n\n",
        "<html><head></head><body>\n",
        "<h2>NPG Tracking Server Error</h2>\n",
        "<h3>$message</h3>\n",
        "</body></html>\n"
     or croak "Error printing: $ERRNO";
  return;
}

sub _list_folders {
  my @list = @_;
  print "Content-type: text/html\n\n",
  "<html><head></head><body>\n",
  "<h2>NPG Tracking Server</h2>\n",
  "<h3>multiple folders found</h3>\n<ul>\n",
  (map{"<li><a href='$_'>$_</a></li>\n"}@list),
  "</ul>\n</body></html>\n"
    or croak "Error printing: $ERRNO";
  return;
}


sub _script_name {
  my $name = $PROGRAM_NAME;
  ($name) = $name =~ m{([^/?]+)\Z}smx;
  return $name;
}

sub main {

  my $path_info = uri_unescape(CGI->new()->url(-relative => 1, -path_info => 1));

  # Depending on how the CGI script is being run, the name of this script
  # might be prepended to $path_info. When the script is run under the
  # Apache httpd server, this depends on whether mod-rewrite is enabled
  # in the server, the version of the server and the history of its updates.
  my $script_name = _script_name();
  my ($pathglob) = $path_info =~

    m{ \A(?:(?:.+/)?$script_name)? # Optionally, the name of this script,
                                   # optionally prepended by some url,
                                   # neither of which we need to capture.
       /?                  # An occasional extra slash
       (/[\/a-zA-Z0-9_*{},-]+?)     # path glob.
       \z
      }smx;

  if (!($pathglob )) {
    _error('Failed to get pathglob', $path_info);
    return;
  }

  my @folders = grep {length} # remove empty entries post-detaint
                map { /([\/a-z0-9_-]+)/imsx; $1 } # detaint
                sort { -M $a <=> -M $b }
	       	glob $pathglob;
  if (!@folders) {
    _error('Folder not found', $pathglob);
    return;
  }

  if (@folders > 1) {
    _list_folders(@folders);
    return;
  }

  my $uri = $folders[0];

  print "Content-type: text/html\n\n",
    qq(<html><head><meta http-equiv="refresh" content="0;url=$uri" /></head></html>\n)
    or croak "Error printing: $ERRNO";

  return;
}
